#%RAML 1.0 DataType

# G8OS 0 Rest API types
Node:
  type: object
  description: Node in the Zero-OS  0 Rest API
  properties:
    id: string
    ipaddress: string
    status:
      enum: [running, halted]
      description: Status of the node
    hostname: string

CPUInfo:
  type: object
  description: Information about physical CPUs
  properties:
    cacheSize:
      type: number
      format: int32
    cores:
      type: number
      format: int32
    family: string
    flags: string[]
    mhz:
      type: number
      format: float

MemInfo:
  type: object
  description: Information about memory
  properties:
    active: integer
    available: integer
    buffers: integer
    cached: integer
    free: integer
    inactive: integer
    total: integer
    used: integer
    usedPercent: number
    wired: integer

OSInfo:
  type: object
  description: Information on the operating system
  properties:
    bootTime:
      type: number
      format: int64
    hostname: string
    os: string
    platform: string
    platformFamily: string
    platformVersion: string
    procs:
      type: number
      format: int64
    uptime:
      type: number
      format: int64
    virtualizationRole: string
    virtualizationSystem: string

NicInfo:
  type: object
  description: Information about network interface
  properties:
    addrs:
      type: string[]
      description: List of IP Addresses
    flags: string[]
    hardwareaddr:
      type: string
      description: Hardware address of network interface
    mtu: integer
    name: string

DiskInfo:
  type: object
  description: Information about the disks.
  properties:
    device:
      type: string
      description: Name of the device
    size:
      type: integer
      description: Size of the disk in GiB
    type:
      enum: [ssd, nvme, hdd, archive]
      description: Kind of disk
    partitions:
      type: DiskPartition[]
      description: List of the disk's partitions

DiskPartition:
  type: object
  description: Information about the disk partition
  properties:
    name:
      type: string
      description: Name of the partition e.g. /dev/sda1
    size:
      type: integer
      description: Size of the disk in GiB
    partuuid:
      type: string
      description: PartUUID of the partition
    label:
      type: string
      description: Partition label
    fstype:
      type: string
      description: Partition filesystem type

NodeMount:
  type: object
  description: Information about the disk mountpoint
  properties:
    mountpoint:
      type: string
      description: Mountpoint name
    device:
      type: string
      description: Device name
    opts:
      type: string
      description: Mountpoint options
    fstype:
      type: string
      description: Mountpoint filesystem type

BridgeCreate:
  type: object
  description: Arguments for a bridge.create job
  properties:
    name:
      description: |
        Name for the bridge to be created.
        The name can't be "default".
      type: string
      maxLength: 15
    hwaddr:
      description: MAC address for the bridge to be created. If none, a random MAC address will be assigned.
      type: string
      required: false
    networkMode:
      description: Networking mode
      enum: ['none', 'static', 'dnsmasq']
    nat:
      description: If true, SNAT will be enabled on this bridge.
      type: boolean
    setting:
      type: BridgeCreateSetting

BridgeCreateSetting:
  properties:
    cidr: string
    start: string
    end: string
  description: |
    Networking settings are depending on the selected 'networkMode' as follows:
      - networkMode = 'none': No settings
        Bridge won't get any IP settings.
      - networkMode = 'static': settings={'cidr': 'ip/net'}
        Bridge will get assigned the given IP address.
      - networkMode= 'dnsmasq': settings={'cidr': 'ip/net', 'start': 'ip', 'end': 'ip'}
        Bridge will get assigned the IP address specified for 'cidr'
        and each running container that is attached to this IP address will get an
        IP address within the specified start/end range. Netmask of the range is the netmask
        part of the provided CIDR.
        If 'nat' is set to true, SNAT rules will be automatically added in the firewall.


Job:
  type: object
  description: Job that is be executed in the node/container. More information can be found here https://github.com/g8os/node/blob/master/docs/commands.md
  properties:
    id:
      description: A unique id for the job. If not supplied an id will be generated.
      type: string
    queue:
      description: Name of the queue in which this job was been enquequed.
      type: string
    tags:
      description: Metadata that is been submitted together with the job and is returned with the result.
      type: string
    statsInterval:
      description: Stats gathering interval.
      default: 0
      type: integer
    maxTime:
      description: Max run time of the job, if exceeded job will be killed.
      default: 0
      type: integer
    maxRestart:
      description: Max number of retries to start the job.
      default: 0
      type: integer
    recurringPeriod:
      description: If provided, job is executed every specified number of seconds.
      default: 0
      type: integer
    logLevels:
      description: Log levels to store locally and not discard.
      type: integer[]
      default: [0]

WriteFile:
  type: object
  displayName: Writes a file in the targetted system
  properties:
    path:
      displayName: Path on the target system where the file should be written
      type: string
    contents:
      displayName: Contents of the file that should be written
      type: string

DeleteFile:
  type: object
  displayName: Removes a file in the targetted system
  properties:
    path:
      displayName: Path on the target system where the file should be written
      type: string

CPUStats:
  description: CPU time stats of all CPUs combined
  type: object
  properties:
    user:
      description: The time the process spent running in user space
      type: number
      format: float
    system:
      description: The time the process spent running in kernel
      type: number
      format: float
    idle:
      description: The time the process spent idle
      type: number
      format: float
    nice:
      description: The time the niced process spent running in user space
      type: number
      format: float
    ioWait:
      description: The time the process spent idle waiting for I/O operation to complete
      type: number
      format: float
    irq:
      description: The time the process spent servicing hardware interrupts
      type: number
      format: float
    softIrq:
      description: The time the process spent servicing software interrupts
      type: number
      format: float
    steal:
      type: number
      format: float
    guestNice:
      type: number
      format: float
    stolen:
      type: number
      format: float

Process:
  type: object
  properties:
    cmdline: string
    cpu: CPUStats
    pid:
      type: number
      format: int64
    rss:
      type: number
      format: int64
    swap:
      type: number
      format: int64
    vms:
      type: number
      format: int64

ProcessSignal:
  type: object
  properties:
    signal:
      type: integer
      description: Number of the signal to send to the process.
      default: 15
      minimum: 1

NicLink:
  type: object
  description: Definition of a virtual NIC.
  properties:
    id:
      type: string
      description: |
        Id for the specified network type
          vlan: vlantag for the vlan
          vxlan: vxlan id
          default: id can be ommited
          bridge: name of the bridge to connect to

      required: false
    type:
      enum: [vlan, vxlan, default, bridge]
      description: Type of NIC
    macaddress:
      type: string
      required: false
      description: Phyiscal address of the NIC

VDiskLink:
  type: object
  description: Definition of a virtual disk
  properties:
    vdiskid:
      type: string
      description: Id of the vdisk
    maxIOps:
      description: Maximum amount of IOPS the virtual disk should deliver
      type: integer

VMListItem:
  type: object
  description: Virtual machine list item
  properties:
    id:
      description: Unique id of the virtual machine
      type: string
    status:
      enum: [deploying, running, halted, paused, halting, migrating, starting, error]
      description: Status of the VM

VM:
  type: object
  properties:
    id:
      description: Unique identifier of the virtual machine
      type: string
    status:
      enum: [deploying, running, halted, paused, halting, migrating, starting, error]
      description: Status of the VM
    vnc:
      type: integer
      description: The VNC port of the machine
    memory:
      description: Amount of memory in MiB
      type: integer
    cpu:
      description: Number of virtual CPUs
      type: integer
    nics:
      description: List of NIC specifications
      type: NicLink[]
    disks:
      description: List of virtual disks
      type: VDiskLink[]

VMCreate:
  type: object
  properties:
    id: string
    memory:
      description: Amount of memory in MiB
      type: integer
    cpu:
      description: Number of virtual CPUs
      type: integer
    nics:
      description: List of NIC specifications
      type: NicLink[]
    disks:
      description: List of virtual disks
      type: VDiskLink[]

VMUpdate:
  type: object
  properties:
    memory:
      description: Amount of memory in MiB
      type: integer
    cpu:
      description: Number of virtual CPUs
      type: integer
    nics:
      description: List of NIC specifications
      type: NicLink[]
    disks:
      description: List of virtual disks
      type: VDiskLink[]


Bridge:
  type: object
  properties:
    name:
      description: Name of the bridge
      type: string
    setting:
      description: |
        - '' or 'none':
          No IP address is gonna be set on the link
        - 'dhcp':
          Run `udhcpc` on the container link, of course this will
          only work if the `bridge` is created with `dnsmasq` networking
        - 'CIDR':
          Assign static IP address to the link
      type: BridgeCreateSetting
    status:
      enum: [up, down]
      description: Status of the bridge

ContainerNIC:
  type: object
  properties:
    type:
      description: Type of the interface
      enum: [zerotier, vxlan, vlan, default, bridge]
    id:
      description: |
        Id for the specified network type
          vlan: vlantag for the vlan
          vxlan: vxlan id
          zerotier: Zerotier network id
          default: id can be ommited
          bridge: name of the bridge to connect to
      type: string
    name:
      description: optional name for the nic inside the conatainer
      required: false
      type: string
    hwaddr:
      description: Mac address for the interface. If none, a random MAC address will be assigned
      type: string
      required: false
    config:
      required: false
      properties:
         dhcp:
           type: boolean
           default: false
           description: If passed true all other config will be ignored
         cidr:
           description: IP Address/Prefix for the interface eg 192.168.103.1/24
           type: string
         gateway:
           type: string
           description: Gateway for the the container
           required: false
         dns:
           type: string[]
           description: List of dns to be used
           required: false
      description: Optional IP address configuration for this interface, only allowed for interfaces of type vxlan and vlan
    status:
      enum: [up, down]
      description: Status of the bridge
    token:
      type: string
      description: Zerotier token, only valid for nic of type 'zerotier'. If supplied, the container will be authorized on the zerotier network.
      required: false

ContainerListItem:
  type: object
  properties:
    name:
      description: Unique name
      type: string
    hostname:
      description: Hostname for the Container
      type: string
    flist:
      type: string
      description: Url to the root filesystem flist
    status:
      enum: [running, halted]
      description: Status of the container

Container:
  type: object
  properties:
    status:
      enum: [running, halted]
      description: Status of the container
    hostname:
      description: Hostname for the Container
      type: string
    zerotiernodeid:
      description: Zerotier id if the container has a nic of type zerotier
      type: string
      required: false
    flist:
      type: string
      description: Url to the root filesystem flist
    initprocesses:
      type: CoreSystem[]
      description: Definition of the processes to start in the container
    filesystems:
      description: |
        List of filesystems that will be exposed to the container
        format: <<storagepool>>:<<filesystem>>
        filesystems are mounted in the container filesystem as follows:
        /fs/<<storagepool>>/<<filesystem>>
      example: ['pool1:fs1', 'pool2:fs2']
      type: string[]
    nics:
      type: ContainerNIC[]
      description: List of container nics
    hostNetworking:
      type: boolean
      description: Make host networking available to the guest. If true means that the container will be able participate in the networks available in the host operating system.
    ports:
      type: string[]
      description: |
        List of node to container post mappings.
      example: ['10022:22', '8080:80']
    storage:
      type: string
      description: A Url to the ardb storage to use to mount the root plist


CreateContainer:
  type: object
  properties:
    name:
      description: unique name
      type: string
    hostname:
      description: Hostname for the Container
      type: string
    flist:
      type: string
      description: Url to the root filesystem flist
    initProcesses:
      type: CoreSystem[]
      description: Definition of the processes to start in the container
      required: false
    filesystems:
      description: |
        List of filesystems that will be exposed to the container
        format: <<storagepool>>:<<filesystem>>
        filesystems are mounted in the container filesystem as follows:
        /fs/<<storagepool>>/<<filesystem>>
      example: ['pool1:fs1', 'pool2:fs2']
      type: string[]
      required: false
    nics:
      type: ContainerNIC[]
      description: List of container nics
      required: false
    hostNetworking:
      type: boolean
      description: Make host networking available to the guest. If true means that the container will be able participate in the networks available in the host operating system.
    ports:
      type: string[]
      description: |
        List of node to container post mappings.
      example: ['10022:22', '8080:80']
      required: false
      default: []
    storage:
      type: string
      required: false
      description: A Url to the ardb storage to use to mount the root plist

JobListItem:
  type: object
  description: Result object of a job
  properties:
    id:
      description: The unique identifier for the job
      type: string
    startTime:
      description: Epoch timestamp when the job was started
      type: number
      format: int64

JobResult:
  type: object
  description: Result object of a job
  properties:
    id:
      description: The unique identifier for the job
      type: string
    name:
      description: The kind of job to which this result belongs to.
      enum: ['core.ping', 'core.system', 'core.kill', 'core.killall',
             'core.state', 'core.reboot', 'info.cpu', 'info.disk',
             'info.mem', 'info.nic', 'info.os', 'container.create',
             'container.list', 'container.dispatch', 'container.terminate',
             'bridge.create', 'bridge.list', 'bridge.delete',
             'disk.list', 'disk.mktable', 'disk.mkpart', 'disk.rmpart',
             'disk.mount', 'disk.umount', 'btrfs.create', 'btrfs.list',
             'btrfs.subvol_create', 'btrfs.subvol_list', 'btrfs.subvol_delete']
    level:
      description: 20 means that the data is json serialized object
      type: integer
    startTime:
      description: Epoch timestamp when the job was started
      type: number
      format: int64
    stdout:
      type: string
      description: Stdout of process/job
    stderr:
      type: string
      description: Stderr of process/job
    state:
      description: Status of the job
      enum: ['unknown_cmd', 'error', 'success', 'killed', 'timeout', 'duplicate_id', 'running']
    data:
      description: The result of executing the job
      type: string

CoreStateResult:
  type: object
  description: Result of a core.state command
  properties:
    cpu:
      description: percentage cpu used in a node
      type: number
      format: float
    rss:
      type: number
      format: int64
    vms:
      type: number
      format: int64
    swap:
      type: number
      format: int64

ZerotierRoute:
  type: object
  description: Zerotier route
  properties:
    flags: integer
    metric: integer
    target: string
    via: string

ZerotierListItem:
  type: object
  description: Zerotier details
  properties:
    name: string
    nwid: string
    status: string
    type:
      enum: ['public', 'private']

ZerotierJoin:
  type: object
  description: |
    Arguments to join a Zerotier network.
    If the token is specified, the node will be authorized.
  properties:
    nwid: string
    token:
      type: string
      required: false

Zerotier:
  type: object
  description: Zerotier details
  properties:
    allowDefault: boolean
    allowGlobal: boolean
    allowManaged: boolean
    assignedAddresses: string[]
    bridge: boolean
    broadcastEnabled: boolean
    dhcp: boolean
    mac: string
    mtu: integer
    name: string
    netconfRevision: integer
    nwid: string
    portDeviceName: string
    portError: integer
    routes: ZerotierRoute[]
    status: string
    type:
      enum: ['public', 'private']

CoreSystem:
  type: object
  description: Arguments for a core.system command
  properties:
    name:
      description: Name of the executable that needs to be run
      type: string
    pwd:
      description: Directory in which the process needs to be started
      type: string
      required: false
    args:
      description: List of commandline arguments
      type: string[]
      required: false
    environment:
      description: |
        Environment variables for the process.
      example: ['PATH=/usr/bin/local', 'MYVAR=https://gig.tech']
      type: string[]
      required: false
    stdin:
      description: Data that needs to be passed into the stdin of the started process
      type: string
      required: false

StoragePoolListItem:
  type: object
  description: A combination of block devices forming 1 logical storage unit.
  properties:
    name:
      description: A unique identifier for the storagepool
      type: string
    capacity:
      description: The amount of remaining free capacity left in the storagepool
    status:
      enum: [healthy, degraded, error, unknown]
      description: Status of the storage pool

StoragePool:
  type: object
  description: A combination of block devices forming 1 logical storage unit.
  properties:
    name:
      description: |
        A unique identifier for the storagepool
        Permitted characters: a-z,-
      type: string
    status:
      enum: [healthy, degraded, error, unknown]
      description: Status of the storage pool
    totalCapacity:
      description: The amount of storage this storagepool can hold in total in GiB
      type: integer
    capacity:
      description: The amount of remaining free capacity left in the storagepool in GiB
      type: integer
    metadataProfile:
      description: Redundancy level of the storage pool meta data
      enum: ['raid0', 'raid1', 'raid5', 'raid6', 'raid10', 'dup', 'single']
    dataProfile:
      description: Redundancy level of the storage pool data
      enum: ['raid0', 'raid1', 'raid5', 'raid6', 'raid10', 'dup', 'single']
    mountpoint:
      description: |
        Location where the storage pool is mounted on the node's filesystem
        The location where the storage pool is mounted cannot be freely chosen.
        Pools are mounted as follows:
        /storage/<<pool>>
      type: string

StoragePoolCreate:
  type: object
  description: Arguments to create a new storage pools
  properties:
    name:
      description: A unique identifier for the storagepool
      type: string
    metadataProfile:
      description: Redundancy level of the storage pool meta data
      enum: ['raid0', 'raid1', 'raid5', 'raid6', 'raid10', 'dup', 'single']
    dataProfile:
      description: Redundancy level of the storage pool data
      enum: ['raid0', 'raid1', 'raid5', 'raid6', 'raid10', 'dup', 'single']
    devices:
      description: List of devices to add to the storage pool
      example: ['/dev/sda', '/dev/sdb']
      type: string[]

StoragePoolDevice:
  type: object
  description:
  properties:
    deviceName:
      type: string
      description: Name of the device
    uuid:
      type: string
      description: UUID of the device
    status:
      enum: [healthy, removing]
      description: Status of the storage pool device


Filesystem:
  type: object
  description: A filesystem living in a storage pool
  properties:
    name:
      description: |
        Unique identifier for the filesystem
      type: string
    parent:
      description: Name of the parent filesystem
      type: string
    sizeOnDisk:
      description: Amount of MiB of storage used by the filesystem
      type: integer
    readOnly:
      description: Determines wether changes can be written to the filesystem
      type: boolean
    quota:
      description: Amount of MiB that can be written to the filesystem. 0 means no quota is set.
      type: integer
    mountpoint:
      description: |
        Location where the filesystem is mounted on the node's filesystem
        The location where the filesystem is mounted cannot be freely chosen.
        filesystems are mounted as follows:
        /filesystems/<<filesystem>>

FilesystemCreate:
  type: object
  description: Arguments to create a new filesystem
  properties:
    name:
      description: |
        Unique identifier for the filesystem
        Permitted characters: a-z,-
        Max length: 50 characters.
      type: string
    quota:
      description: Amount of MiB that can be written to the filesystem. 0 means no quota is set.
      type: integer
    readOnly:
      type: boolean
      default: false
      description: set the filesystem to read only mode

Snapshot:
  type: object
  description: Read only copy of the state of the filesystem at a certain time
  properties:
    name:
      description: Unique name for the snapshot
      type: string
    sizeOnDisk:
      description: The amount of space on disk used by this snapshot in MiB
      type: integer
    timestamp:
      description:
        Epoch timestamp (seconds sinds 01/01/1970) when the snapshot was created
      type: integer

VMDiskInfo:
  type: object
  properties:
    readIops:
      description: Average number of io read operations per second over the last 5 minutes
      type: integer
    writeIops:
      description: Average number of io write operations per second over the last 5 minutes
      type: integer
    readThroughput:
      description: Average amount of MiB's read per second over the last 5 minutes
      type: integer
    writeThroughput:
      description: Average amount of MiB's written per second over the last 5 minutes
      type: integer

VMNicInfo:
  type: object
  properties:
    receivedPackets:
      description: Average number of packets received per second over the last 5 minutes
      type: integer
    transmittedPackets:
      description: Average number of packets sent per second over the last 5 minutes
      type: integer
    receivedThroughput:
      description: Average amount of MiB's received per second over the last 5 minutes
      type: integer
    transmittedThroughput:
      description: Average amount of MiB's transmitted per second over the last 5 minutes
      type: integer

VMInfo:
  type: object
  description: Statistical information about a vm
  properties:
    disks: VMDiskInfo[]
    nics: VMNicInfo[]
    cpu:
      description: Average number of cpu utilisation in cpu seconds / second over the last 5 minutes per vcpu
      type: number[]

VMMigrate:
  properties:
    nodeid:
      description: Node identifier to which this vm needs to be migrated
      type: string

# ObjtStor types
StorageServer:
  properties:
    id:
      type: integer
      description: unique id for this storage server
    ip: string
    port: integer
    container:
      type: string
      description: URL to the container resource running this server
    status:
      type: string
      enum: [ready, error]

ClusterCreate:
  properties:
    label: string
    servers:
      type: integer
      description: Number of storage servers to deploy in this cluster
    driveType:
      type: string
      enum: [nvme, ssd, hdd, archive]
    nodes:
      type: string[]
      description: List of node ID on which we can deploy storage server
    clusterType:
      type: string
      enum: [storage, tlog]
      description: cluster type
    k:
      type: integer
      description: K variable of the erasure encoding, required for tlog clusters
      required: false
    m:
      type: integer
      description: M variable of the erasure encoding, required for tlog clusters
      required: false
  example:
    label: cluster1
    servers: 256
    driveType: ssd
    nodes:
       - node1
       - node2
    clusterType: storage

Cluster:
  properties:
    label: string
    status:
      type: string
      enum: [empty, deploying, ready, error]
    driveType:
      type: string
      enum: [nvme, ssd, hdd, archive]
    nodes:
      type: string[]
      description: List of node ID on which storage server are deployed for this cluster
    dataStorage:
      type: StorageServer[]
      description: List of data storage servers in the cluster
    metadataStorage:
      type: StorageServer[]
      description: List of metadata storage servers in the cluster

# Vdisks API
VdiskCreate:
  properties:
    id:
      type: string
      description: name of the vdisk. need to be unique
      required: true
    size:
      type: integer
      description: Size of the vdisk in GiB
    blocksize:
      type: integer
      description: blocksize in bytes
      default: 4096
    type:
      enum: [boot, db, cache, tmp]
      description: |
        - boot: A boot disk is a redundant disk that can be initialized based on a templatevdisk. See templatevdisk property. Boot disks should only be used for the operating system and applications installed on the operating system. Performance of bootdisks is not optimized because that defeats their purpose.
        - db: A db disk is a redundant disk optimized for performant block storage. DB disks should be used for running reliable high io intensive workloads such as databases, key value stores, ...
        - cache: A cache disk is a persistent non redundant disk optimized for performant block storage. Cache disks should be used for high io intensive workloads which don't need to be highly reliable.
        - tmp: A tmp disk is a non persistent non redundant disk optimized for performant block storage. Content in tmp disks is only available while mounted. Tmp disks should be used for swap and mounts in /tmp.

        | disk type | redundant | persistent | template support | rollback | performance optimized |
        | --------- | --------- | ---------- | ---------------- | -------- | --------------------- |
        | boot | yes | yes | yes | yes | no |
        | db | yes | yes | no | yes | yes |
        | cache | no | yes | no | no | yes |
        | tmp | no | no | no | no | yes |
      required: true
    templatevdisk:
      type: string
      description: |
        Url to ardb server with the name of the template as path eg. ardb://myardb:16379/mytemplatename
        You can ommit the netlocation to use storage server defined in the g8os eg. ardb:///mytemplatename

        This property can only be used when the disk is of type boot.
      required: false
    readOnly:
      type: boolean
      required: false
      default: false
    storagecluster:
      type: string
      description: the storagecluster used for this vdisk's main storage.
      required: true
    tlogStoragecluster:
      type: string
      description: |
        the storagecluster used for this vdisk's transaction logs

        This property can only be used when the disk is of type boot or db.
      required: false
    backupStoragecluster:
      type: string
      description: |
        the storagecluster used for this vdisk's main storage.

        This property can only be used when the disk is of type boot or db.
      required: false

Vdisk:
  properties:
    id: string
    status:
      enum: [running, halted, rollingback]
      description: Status of the vdisk
    size:
      type: integer
      description: Size of the vdisk in GiB
    blocksize:
      type: integer
      description: blocksize in bytes
      default: 4096
    type:
      enum: [boot, db, cache, tmp]
      description: The type of vdisk.
    readOnly:
      type: boolean
      default: false
      required: false
    storagecluster:
      type: string
      description: the storagecluster used for this vdisk's main storage.
    tlogStoragecluster:
      type: string
      description: the storagecluster used for this vdisk's transaction logs

VdiskListItem:
  properties:
    id: string
    status:
      enum: [running, halted, rollingback]
      description: Status of the vdisk
    type:
      enum: [boot, db, cache, tmp]
      description: The type of vdisk.
    storagecluster:
      type: string
      description: the storagecluster used for this vdisk's main storage.

VdiskResize:
  properties:
    newSize:
      type: integer
      description: New size in Gib, need to be bigger then the current size.

VdiskRollback:
  properties:
    epoch:
      type: integer
      description: Epoch to which we want to rollback the vdisk

# GWS objects
IPProtocol:
  enum: [tcp, udp]

PortForward:
  properties:
    protocols:
      type: IPProtocol[]
    srcport:
      type: integer
    srcip:
      type: string
    dstport:
      type: integer
    dstip:
      type: string

HTTPType:
  enum: [http, https]

HTTPProxy:
  properties:
    host:
      type: string
      description: Host to proxy for eg. myhost.mydomain.com
    destinations:
      type: string[]
      description: |
        Destinations of the proxy eg. http://172.17.0.6:5000
        If multiple destinations are given loadbalancing will be applied
    types:
      type: HTTPType[]

CloudInit:
  properties:
    userdata:
      type: string
      description: |
        userdata for cloud-init ini YAML format
        For more detauled information [see](https://cloudinit.readthedocs.io/en/latest/topics/examples.html)

    metadata:
      type: string
      description: |
        metadata for cloud-init ini YAML format mainly used for setting hostname
        For more details [see](http://cloudinit.readthedocs.io/en/latest/topics/datasources/ec2.html)

GWHost:
  properties:
    macaddress:
      type: string
      description: Phyiscal Address
    hostname:
      type: string
      description: hostname
    ipaddress:
      type: string
      description: IP Address for hostname
    ip6address:
      type: string
      description: IP6 Address for hostname
      required: false
    cloudinit:
      type: CloudInit
      description: Cloudinit configuration
      required: false

DHCP:
  properties:
    nameservers:
      type: string[]
      description: List of nameservers
      required: false
    hosts:
      type: GWHost[]
      description: List of dhcpshosts

ZerotierBridge:
  properties:
    id:
      type: string
      description: zerotier network id
    token:
      type: string
      description: zerotier authorization token, used to authorize the container if supplied.
      required: false


GWNIC:
  type: object
  properties:
    type:
      description: Type of the interface
      enum: [zerotier, vxlan, vlan, default, bridge]
    id:
      description: |
        Id for the specified network type
          vlan: vlantag for the vlan
          vxlan: vxlan id
          zerotier: Zerotier network id
          default: id can be ommited
          bridge: name of the bridge to connect to
      type: string
    zerotierbridge:
      required: false
      description: |
        Zerotier NetworkId we want to use to bridge the private network to.
        This makes it possible to bridge your private network with a private network of an other gateway
      type: ZerotierBridge
    config:
      required: false
      properties:
         cidr:
           description: IP Address/Prefix for the interface eg 192.168.103.1/24
           type: string
         gateway:
           type: string
           description: |
             Gateway for the the container
             When adding a gateway to a Nic it's considered a public interface
           required: false
      description: Optional IP address configuration for this interface, only allowed for interfaces of type vxlan and vlan
    name:
      description: Name of the interface
      type: string
    dhcpserver:
      description: The DHCP config for the nic
      required: false
      type: DHCP

GWCreate:
  properties:
    name:
      type: string
      description: Name of gateway
    domain:
      type: string
      description: Name of domain
    nics:
      type: GWNIC[]
      description: List of gateway nics
    portforwards:
      type: PortForward[]
      description: List of portfowardings
      required: false
    httpproxies:
      type: HTTPProxy[]
      description: List of HTTPProxy
      required: false

ListGW:
  properties:
    name:
      type: string
      description: Name of gateway
    domain:
      type: string
      description: Name of domain
    nics:
      type: GWNIC[]
      description: List of gateway nics
    portforwards:
      type: PortForward[]
      description: List of portfowardings
      required: false
    httpproxies:
      type: HTTPProxy[]
      description: List of HTTPProxy
      required: false
    zerotiernodeid:
      type: string
      description: id of the zerotier daemon
      required: false

GW:
  properties:
    domain:
      type: string
      description: Name of domain
    nics:
      type: GWNIC[]
      description: List of gateway nics
    portforwards:
      type: PortForward[]
      description: List of portfowardings
      required: false
    httpproxies:
      type: HTTPProxy[]
      description: List of HTTPProxy
      required: false

GetGW:
  properties:
    domain:
      type: string
      description: Name of domain
    nics:
      type: GWNIC[]
      description: List of gateway nics
    portforwards:
      type: PortForward[]
      description: List of portfowardings
      required: false
    httpproxies:
      type: HTTPProxy[]
      description: List of HTTPProxy
      required: false
    zerotiernodeid:
      type: string
      description: id of the zerotier daemon
      required: false
    status:
      enum: [running, halted]
      description: Status of the gateway
